/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as ExemplesDemoStoreRouteImport } from './routes/exemples/demo.store'
import { Route as ExemplesDemoStartServerFuncsRouteImport } from './routes/exemples/demo.start.server-funcs'
import { Route as ExemplesDemoStartApiRequestRouteImport } from './routes/exemples/demo.start.api-request'
import { ServerRoute as ExemplesApiDemoNamesServerRouteImport } from './routes/exemples/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const ExemplesDemoStoreRoute = ExemplesDemoStoreRouteImport.update({
  id: '/exemples/demo/store',
  path: '/exemples/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const ExemplesDemoStartServerFuncsRoute =
  ExemplesDemoStartServerFuncsRouteImport.update({
    id: '/exemples/demo/start/server-funcs',
    path: '/exemples/demo/start/server-funcs',
    getParentRoute: () => rootRouteImport,
  } as any)
const ExemplesDemoStartApiRequestRoute =
  ExemplesDemoStartApiRequestRouteImport.update({
    id: '/exemples/demo/start/api-request',
    path: '/exemples/demo/start/api-request',
    getParentRoute: () => rootRouteImport,
  } as any)
const ExemplesApiDemoNamesServerRoute =
  ExemplesApiDemoNamesServerRouteImport.update({
    id: '/exemples/api/demo-names',
    path: '/exemples/api/demo-names',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof AppDashboardRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/exemples/demo/store': typeof ExemplesDemoStoreRoute
  '/exemples/demo/start/api-request': typeof ExemplesDemoStartApiRequestRoute
  '/exemples/demo/start/server-funcs': typeof ExemplesDemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof AppDashboardRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/exemples/demo/store': typeof ExemplesDemoStoreRoute
  '/exemples/demo/start/api-request': typeof ExemplesDemoStartApiRequestRoute
  '/exemples/demo/start/server-funcs': typeof ExemplesDemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/exemples/demo/store': typeof ExemplesDemoStoreRoute
  '/exemples/demo/start/api-request': typeof ExemplesDemoStartApiRequestRoute
  '/exemples/demo/start/server-funcs': typeof ExemplesDemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/exemples/demo/store'
    | '/exemples/demo/start/api-request'
    | '/exemples/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/exemples/demo/store'
    | '/exemples/demo/start/api-request'
    | '/exemples/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/dashboard'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/exemples/demo/store'
    | '/exemples/demo/start/api-request'
    | '/exemples/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  ExemplesDemoStoreRoute: typeof ExemplesDemoStoreRoute
  ExemplesDemoStartApiRequestRoute: typeof ExemplesDemoStartApiRequestRoute
  ExemplesDemoStartServerFuncsRoute: typeof ExemplesDemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/exemples/api/demo-names': typeof ExemplesApiDemoNamesServerRoute
}
export interface FileServerRoutesByTo {
  '/exemples/api/demo-names': typeof ExemplesApiDemoNamesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/exemples/api/demo-names': typeof ExemplesApiDemoNamesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/exemples/api/demo-names'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/exemples/api/demo-names'
  id: '__root__' | '/exemples/api/demo-names'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ExemplesApiDemoNamesServerRoute: typeof ExemplesApiDemoNamesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRoute
    }
    '/exemples/demo/store': {
      id: '/exemples/demo/store'
      path: '/exemples/demo/store'
      fullPath: '/exemples/demo/store'
      preLoaderRoute: typeof ExemplesDemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exemples/demo/start/server-funcs': {
      id: '/exemples/demo/start/server-funcs'
      path: '/exemples/demo/start/server-funcs'
      fullPath: '/exemples/demo/start/server-funcs'
      preLoaderRoute: typeof ExemplesDemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exemples/demo/start/api-request': {
      id: '/exemples/demo/start/api-request'
      path: '/exemples/demo/start/api-request'
      fullPath: '/exemples/demo/start/api-request'
      preLoaderRoute: typeof ExemplesDemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/exemples/api/demo-names': {
      id: '/exemples/api/demo-names'
      path: '/exemples/api/demo-names'
      fullPath: '/exemples/api/demo-names'
      preLoaderRoute: typeof ExemplesApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  ExemplesDemoStoreRoute: ExemplesDemoStoreRoute,
  ExemplesDemoStartApiRequestRoute: ExemplesDemoStartApiRequestRoute,
  ExemplesDemoStartServerFuncsRoute: ExemplesDemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ExemplesApiDemoNamesServerRoute: ExemplesApiDemoNamesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
